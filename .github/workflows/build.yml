name: Build

on:
  push:
    branches:
      - "*"
    tags:
      - "*"

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      APP: blendcube
    steps:

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - name: Check out
        uses: actions/checkout@v1

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d'/' -f3)

      - name: Build binary
        run: make build

      - name: Make Config
        run: |
          cat config.json.example |\
            jq '.log.file_path="/var/log/${{ env.APP }}/${{ env.APP }}.log"' |\
            jq '.model.file_path="/etc/${{ env.APP }}/cube.gltf"' |\
            jq '.model.binary_file_path="/etc/${{ env.APP }}/cube.glb"' \
            > config.json

      - name: Archive Source
        run: |
          mkdir -p ${{ env.APP }}-${{ steps.get_version.outputs.VERSION }} SOURCES
          cp ${{ env.APP }} \
            config.json \
            config/cube.gltf \
            config/cube.glb \
            config/service \
            config/logrotate \
            ${{ env.APP }}-${{ steps.get_version.outputs.VERSION }}/
          tar czf \
            SOURCES/${{ env.APP }}-${{ steps.get_version.outputs.VERSION }}.tar.gz \
            ${{ env.APP }}-${{ steps.get_version.outputs.VERSION }}/

      - name: Build RPM
        uses: ./.github/actions/rpmbuild

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        if: "!startsWith(github.ref, 'refs/tags/')"
        with:
          name: ${{ env.APP }}-${{ steps.get_version.outputs.VERSION }}-1.x86_64.rpm
          path: ./RPMS/x86_64/${{ env.APP }}-${{ steps.get_version.outputs.VERSION }}-1.x86_64.rpm

      - name: Create Release
        uses: actions/create-release@master
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.get_version.outputs.VERSION }}
          draft: true
        id: create_release

      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@master
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./RPMS/x86_64/${{ env.APP }}-${{ steps.get_version.outputs.VERSION }}-1.x86_64.rpm
          asset_name: ${{ env.APP }}-${{ steps.get_version.outputs.VERSION }}-1.x86_64.rpm
          asset_content_type: application/x-redhat-package-manager
